// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id             Int               @id @default(autoincrement())
  email       String            @unique
  username String?
  name           String?
  password       String
  rolUser        RolUser 
}

enum RolUser {
  ADMIN
  USER
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  price       String
  img String?
  stock Int
  createdAt   DateTime     @default(now())
  categories  Categories[] @relation("ProductCategories")
  productCategories ProductCategories[]
  talles ProductoTalle[]
}

model Categories {
  id             Int          @id @default(autoincrement())
  name           String
  products       Product[]     @relation("ProductCategories")
  productCategories ProductCategories[]
  subCategories  SubCategories[]
}

model SubCategories {
  id          Int          @id @default(autoincrement())
  categoryId  Int
  name        String
  categories  Categories @relation(fields: [categoryId], references: [id])
}

model Talle {
  id        Int      @id @default(autoincrement())
  size      String   
  product   ProductoTalle[]
}

model ProductoTalle {
  id          Int      @id @default(autoincrement())
  productoId  Int
  talleId     Int
  stock       Int  
  Product    Product  @relation(fields: [productoId], references: [id], onDelete: Cascade)
  Talle       Talle     @relation(fields: [talleId], references: [id], onDelete: Cascade)

  @@unique([productoId, talleId]) 
}

model ProductCategories {
  productId    Int
  categoryId   Int
  product      Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  category     Categories @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([productId, categoryId])
}

